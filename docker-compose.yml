version: '3.3'

services:
  # roscore
  # roscore:
    # image: ros:noetic-ros-core
    # env_file: .env
    # container_name: rt-cvision-roscore
    # network_mode: host
    # command: roscore
    # restart: always
    # ports:
    #   - "11312:11312"
      
  # redis
  redis:
    image: "redis:alpine"
    container_name: rt-cvision-redis
    restart: "always"
    ports:
      - "6379:6379"
      - "16379:16379"
    volumes:
      - cache:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - rt-cvision-network

  # zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: rt-cvision-zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - rt-cvision-network

  # kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: rt-cvision-kafka
    restart: always
    networks: 
      - rt-cvision-network
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100

  # computing unit
  rt-cvision:
    image: wasteant/wasteant:rt-cvision-${CUDA_VERSION}-${ros_version:-ros2}-${ros_distro:-humble}
    container_name: rt-cvision-core
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
      args:
        ros_version: ${ros_version}
        ros_distro: ${ros_distro}
        user: ${user}
        userid: ${userid}
        group: ${group}
        groupid: ${groupid}
        CUDA_VERSION: ${CUDA_VERSION}
    networks: 
      - rt-cvision-network
    ports:
      - ${INET_HTTP_SERVER_PORT}:${INET_HTTP_SERVER_PORT}
      - ${DJANGO_ADMIN_PORT}:${DJANGO_ADMIN_PORT}
      - ${CONFIGURE_API_PORT}:${CONFIGURE_API_PORT}
    restart: unless-stopped
    depends_on:
      - redis
      - kafka
    volumes:
      - ./:/home/$user/src
      - data:/home/$user/src/rt_cvision/sqlite
      - media:/media/$user/rt_cvision
    user: ${user}
    environment:
      ros_version: ros2
      ros_distro: humble
      user: appuser
      userid: 1000
      group: appuser
      groupid: 1000
      CUDA_VERSION: 12.5.1-cudnn-runtime-ubuntu22.04
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

volumes:
  cache:
    driver: local
  media:
    driver: local
  data:
    driver: local

networks:
  rt-cvision-network:
    driver: bridge
    name: rt-cvision
