# Generated by Django 4.2 on 2025-06-30 14:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('data_reader', '0003_image_height_image_width_imagetag_image_tags'),
        ('metadata', '0002_taggroup_tag'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('impurity', '0008_impuritytask_description'),
    ]

    operations = [
        migrations.AddField(
            model_name='impurity',
            name='meta_info',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='impurity',
            name='image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='impurities', to='data_reader.image'),
        ),
        migrations.CreateModel(
            name='ImpurityTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tagged_at', models.DateTimeField(auto_now_add=True)),
                ('source', models.CharField(choices=[('auto', 'Auto'), ('human', 'Human'), ('model', 'Model')], default='auto', max_length=50)),
                ('confidence', models.FloatField(blank=True, null=True)),
                ('impurity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='impurity_tags', to='impurity.impurity')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_impurities', to='metadata.tag')),
                ('tagged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Impurity Tags',
                'db_table': 'impurity_tag',
            },
        ),
        migrations.AddField(
            model_name='impurity',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='impurities', through='impurity.ImpurityTag', to='metadata.tag'),
        ),
        migrations.AddIndex(
            model_name='impuritytag',
            index=models.Index(fields=['tag'], name='impurity_ta_tag_id_69af09_idx'),
        ),
        migrations.AddIndex(
            model_name='impuritytag',
            index=models.Index(fields=['impurity'], name='impurity_ta_impurit_52b2b8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='impuritytag',
            unique_together={('impurity', 'tag')},
        ),
    ]
